filmes <- read.csv("(6.2) Filmes Streaming.csv")
series <- read.csv("(6.3) Séries Streaming.csv")
library(tidyverse)
glimpse(filmes)
glimpse(series)
completo <- filmes %>% select(everything(), -(Directors:Runtime)) %>%
bind_rows(series) %>%
select(!X)
ajuste_imdb <- as.numeric(str_sub(completo$IMDb, 1, 3))
ajuste_rotten <- as.numeric(str_sub(completo$Rotten.Tomatoes, 1, 2))
completo <- completo %>%  mutate(IMDB = ajuste_imdb,
ROTTEN = ajuste_rotten)
completo %>% mutate(Type = replace(Type, Type==1, "serie"),
Type = replace(Type, Type==0, "filme"))  %>%
group_by(Type) %>%
summarise(mediaIMDB=mean(IMDB, na.rm=T),
mediaROTTEN=mean(ROTTEN, na.rm=T),
p95IMDB=quantile(IMDB, probs=0.95, type=5, na.rm=T),
p95ROTTEN=quantile(ROTTEN, probs=0.95, type=5, na.rm=T)) %>%
ungroup() %>% droplevels(.)
View(completo)
completo %>% mutate(Type = replace(Type, Type==1, "serie"),
Type = replace(Type, Type==0, "filme"))  %>%
group_by(Type) %>%
summarise(mediaIMDB=mean(IMDB, na.rm=T),
mediaROTTEN=mean(ROTTEN, na.rm=T),
p95IMDB=quantile(IMDB, probs=0.95, type=5, na.rm=T),
p95ROTTEN=quantile(ROTTEN, probs=0.95, type=5, na.rm=T))
View(completo)
completo %>% mutate(Type = replace(Type, Type==1, "serie"),
Type = replace(Type, Type==0, "filme"))  %>%
group_by(Type) %>%
summarise(mediaIMDB=mean(IMDB, na.rm=T),
mediaROTTEN=mean(ROTTEN, na.rm=T),
p95IMDB=quantile(IMDB, probs=0.95, type=5, na.rm=T),
p95ROTTEN=quantile(ROTTEN, probs=0.95, type=5, na.rm=T)) %>%
ungroup() %>% droplevels(.)
View(completo)
View(completo)
View(filmes)
View(filmes)
View(series)
completo %>% mutate(Type = replace(Type, Type==1, "serie"),
Type = replace(Type, Type==0, "filme"))  %>%
group_by(Type) %>%
summarise(mediaIMDB=mean(IMDB, na.rm=T),
mediaROTTEN=mean(ROTTEN, na.rm=T),
p95IMDB=quantile(IMDB, probs=0.95, type=5, na.rm=T),
p95ROTTEN=quantile(ROTTEN, probs=0.95, type=5, na.rm=T))
View(completo)
View(completo)
View(completo)
filmes <- read.csv("(6.2) Filmes Streaming.csv")
series <- read.csv("(6.3) Séries Streaming.csv")
library(tidyverse)
glimpse(filmes)
glimpse(series)
completo <- filmes %>% select(everything(), -(Directors:Runtime)) %>%
bind_rows(series) %>%
select(!X)
View(completo)
ajuste_imdb <- as.numeric(str_sub(completo$IMDb, 1, 3))
ajuste_rotten <- as.numeric(str_sub(completo$Rotten.Tomatoes, 1, 2))
completo <- completo %>%  mutate(IMDB = ajuste_imdb,
ROTTEN = ajuste_rotten)
completo %>% mutate(Type = replace(Type, Type==1, "serie"),
Type = replace(Type, Type==0, "filme"))  %>%
group_by(Type) %>%
summarise(mediaIMDB=mean(IMDB, na.rm=T),
mediaROTTEN=mean(ROTTEN, na.rm=T),
p95IMDB=quantile(IMDB, probs=0.95, type=5, na.rm=T),
p95ROTTEN=quantile(ROTTEN, probs=0.95, type=5, na.rm=T)) %>%
ungroup() %>% droplevels(.)
melhores_series <- completo %>% filter(Type==1) %>%
mutate(melhoresIMDb = cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1)),
melhoresTOTTEN = cut(ROTTEN,
c(-Inf,
quantile(ROTTEN, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))) %>%
filter(melhoresIMDb==1&melhoresTOTTEN==1)
View(melhores_series)
View(melhores_series)
View(melhores_series)
View(melhores_series)
completo %>% filter(Type = 1) %>%
melhoresIMDb = cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))
mpleto %>% filter(Type = 1) %>%
cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))
completo %>% filter(Type = 1) %>%
cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))
completo %>% filter(Type = 1)
completo %>% filter(Type == 1) %>%
cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))
completo %>% filter(Type == 1)
help("cut")
View(completo)
View(completo)
View(completo)
filmes <- read.csv("(6.2) Filmes Streaming.csv")
series <- read.csv("(6.3) Séries Streaming.csv")
library(tidyverse)
filmes <- read.csv("(6.2) Filmes Streaming.csv")
series <- read.csv("(6.3) Séries Streaming.csv")
library(tidyverse)
glimpse(filmes)
glimpse(series)
completo <- filmes %>% select(everything(), -(Directors:Runtime)) %>%
bind_rows(series) %>%
select(!X)
ajuste_imdb <- as.numeric(str_sub(completo$IMDb, 1, 3))
ajuste_rotten <- as.numeric(str_sub(completo$Rotten.Tomatoes, 1, 2))
completo <- completo %>%  mutate(IMDB = ajuste_imdb,
ROTTEN = ajuste_rotten)
completo %>% mutate(Type = replace(Type, Type==1, "serie"),
Type = replace(Type, Type==0, "filme"))  %>%
group_by(Type) %>%
summarise(mediaIMDB=mean(IMDB, na.rm=T),
mediaROTTEN=mean(ROTTEN, na.rm=T),
p95IMDB=quantile(IMDB, probs=0.95, type=5, na.rm=T),
p95ROTTEN=quantile(ROTTEN, probs=0.95, type=5, na.rm=T)) %>%
ungroup() %>% droplevels(.)
completo %>% filter(Type == 1) %>%
cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))
melhores_series <- completo %>% filter(Type==1) %>%
mutate(melhoresIMDb = cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1)),
melhoresTOTTEN = cut(ROTTEN,
c(-Inf,
quantile(ROTTEN, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))) %>%
filter(melhoresIMDb==1&melhoresTOTTEN==1)
melhores_filmes <- completo %>% filter(Type==0) %>%
mutate(melhoresIMDb = cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1)),
melhoresTOTTEN = cut(ROTTEN,
c(-Inf,
quantile(ROTTEN, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))) %>%
filter(melhoresIMDb==1&melhoresTOTTEN==1)
View(completo)
completo %>% filter(Type == 1) %>%
cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))
stats::rnorm(10000)
Z <- stats::rnorm(10000)
cut(Z, breaks = -6:6)
table(cut(Z, breaks = -6:6))
completo$IMDB
filmes <- read.csv("(6.2) Filmes Streaming.csv")
series <- read.csv("(6.3) Séries Streaming.csv")
library(tidyverse)
glimpse(filmes)
glimpse(series)
completo <- filmes %>% select(everything(), -(Directors:Runtime)) %>%
bind_rows(series) %>%
select(!X)
View(completo)
ajuste_imdb <- as.numeric(str_sub(completo$IMDb, 1, 3))
ajuste_rotten <- as.numeric(str_sub(completo$Rotten.Tomatoes, 1, 2))
completo <- completo %>%  mutate(IMDB = ajuste_imdb,
ROTTEN = ajuste_rotten)
completo %>% mutate(Type = replace(Type, Type==1, "serie"),
Type = replace(Type, Type==0, "filme"))  %>%
group_by(Type) %>%
summarise(mediaIMDB=mean(IMDB, na.rm=T),
mediaROTTEN=mean(ROTTEN, na.rm=T),
p95IMDB=quantile(IMDB, probs=0.95, type=5, na.rm=T),
p95ROTTEN=quantile(ROTTEN, probs=0.95, type=5, na.rm=T)) %>%
ungroup() %>% droplevels(.)
completo %>% filter(Type == 1) %>%
cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))
completo %>% filter(Type == 1) %>%
cut(IMDb,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))
melhores_series <- completo %>% filter(Type==1) %>%
mutate(melhoresIMDb = cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1)),
melhoresTOTTEN = cut(ROTTEN,
c(-Inf,
quantile(ROTTEN, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))) %>%
filter(melhoresIMDb==1&melhoresTOTTEN==1)
completo %>% filter(Type == 1) %>%
cut(IMDb,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))
completo %>% filter(Type == 1) %>%
cut(completo$IMDB,
c(-Inf,
quantile(completo$IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1))
completo %>% filter(Type == 1) %>%
table(cut(IMDB,
c(-Inf,
quantile(IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1)))
completo %>% filter(Type == 1) %>%
table(cut(completo$IMDB,
c(-Inf,
quantile(completo$IMDB, probs=0.95, type=5, na.rm=T),
Inf),
c(0,1)))
install.packages("tidyverse")
install.packages("tidyverse")
library("tidyverse")
library(readxl)
dataset_inicial <- read_excel("(1.2) Dataset Aula Data Wrangling.xls")
dataset_merge <- read_excel("(1.3) Dataset Aula Data Wrangling (Join).xls")
View(dataset_inicial) # Mostra a base de dados completa em uma nova aba
head(dataset_inicial, n=5) # Mostra as 5 primeiras observações da base de dados
str(dataset_inicial) # Mostra a estrutura da base de dados
glimpse(dataset_inicial) # Função parecida com a str
print(dataset_inicial) # Apresenta a base de dados no console
dim(dataset_inicial) # As dimensões do dataset: linhas e colunas, respectivamente
names(dataset_inicial) # Para ver os nomes das variáveis
dataset_inicial$`Tempo para chegar à escola (minutos)`
novos_nomes <- c("Observações",
"Tempo para chegar",
"Distância percorrida",
"Semáforos",
"Período",
"Perfil")
print(novos_nomes)
names(dataset_inicial) <- novos_nomes
head(dataset_inicial, n=5)
nova_base <- rename(dataset_inicial,
observacoes = Observações,
tempo = "Tempo para chegar",
distancia = "Distância percorrida",
semaforos = "Semáforos",
periodo = "Período",
perfil = "Perfil")
head(nova_base, n=5)
nova_base %>% rename(obs = observacoes,
temp = tempo,
dist = distancia,
sem = semaforos,
per = periodo,
perf = perfil)
nova_base_pipe <- nova_base %>% rename(obs = observacoes,
temp = tempo,
dist = distancia,
sem = semaforos,
per = periodo,
perf = perfil)
head(nova_base_pipe, n=5)
rm(nova_base_pipe) # Remove o objeto especificado do ambiente
nova_base %>% rename(obs = 1,
temp = 2,
dist = 3,
sem = 4,
per = 5,
perf = 6)
nova_base %>% rename(sem = 4,
perf = 6)
variavel_nova_1 <- c(1,2,3,4,5,6,7,8,9,10)
variavel_nova_2 <- c(11:20)
print(variavel_nova_1)
print(variavel_nova_2)
base_inclui <- mutate(nova_base,
variavel_nova_1,
variavel_nova_2)
View(base_inclui)
nova_base %>% rename(obs = observacoes,
temp = tempo,
dist = distancia,
sem = semaforos,
per = periodo,
perf = perfil) %>%
mutate(variavel_nova_1,
variavel_nova_2,
temp_novo = tempo*2)
nova_base %>% rename(obs = observacoes,
temp = tempo,
dist = distancia,
sem = semaforos,
per = periodo,
perf = perfil) %>%
mutate(variavel_nova_1,
variavel_nova_2,
temp_novo = temp*2)
base_texto_1 <- mutate(nova_base,
semaforos = replace(semaforos, semaforos==0, "Zero"),
semaforos = replace(semaforos, semaforos==1, "Um"),
semaforos = replace(semaforos, semaforos==2, "Dois"),
semaforos = replace(semaforos, semaforos==3, "Três"))
head(base_texto_1)
base_texto_2 <- mutate(nova_base,
perfil_novo = recode(perfil,
"calmo"="perfil 1",
"moderado"="perfil 2",
"agressivo"="perfil 3"))
head(base_texto_2)
base_texto_valores <- mutate(nova_base,
periodo = recode(periodo,
"Manhã"=0,
"Tarde"=1))
head(base_texto_valores)
base_dummy <- mutate(nova_base, perfil_agressivo = recode(perfil,
"agressivo"=1,
"moderado"=0,
"calmo"=0),
perfil_moderado = recode(perfil,
"agressivo"=0,
"moderado"=1,
"calmo"=0),
perfil_calmo = recode(perfil,
"agressivo"=0,
"moderado"=0,
"calmo"=1))
View(base_dummy)
base_exclui <- transmute(nova_base,
observacoes, tempo,
variavel_nova_1, variavel_nova_2)
nova_base %>% cut(tempo, c(0, median(tempo), Inf), c("menores","maiores"))
nova_base %>% mutate(posicao = cut(tempo, c(0, median(tempo), Inf), c("menores","maiores")))
posicao = cut(tempo, c(0, median(tempo), Inf), c("menores","maiores"))
posicao = cut(nova_base$tempo, c(0, median(nova_base$tempo), Inf), c("menores","maiores"))
posicao
base_exclui_rename <- nova_base %>% transmute(observacoes, tempo,
variavel_nova_1) %>%
mutate(tempo_novo = recode(tempo,
"10"="dez",
"15"="quinze",
"20"="vinte",
"25"="vinte e cinco",
"30"="trinta",
"35"="trinta e cinco",
"40"="quarenta",
"50"="cinquenta",
"55"="cinquenta e cinco")) %>%
mutate(posicao = cut(tempo,
c(0, median(tempo), Inf),
c("menores",
"maiores")))
View(base_exclui_rename)
median(nova_base$tempo)
View(completo)
filmes <- read.csv("(6.2) Filmes Streaming.csv")
series <- read.csv("(6.3) Séries Streaming.csv")
library(tidyverse)
glimpse(filmes)
glimpse(series)
completo <- filmes %>% select(everything(), -(Directors:Runtime)) %>%
bind_rows(series) %>%
select(!X)
ajuste_imdb <- as.numeric(strsplit(completo$IMDb, "/")[1])
# O primeiro passo é ajustar as duas variáveis com notas, pois são texto
strsplit(completo$IMDb, "/")[1]
strsplit(completo$IMDb, "/")[1,1]
# O primeiro passo é ajustar as duas variáveis com notas, pois são texto
strsplit(completo$IMDb, "/")[[1]]
# O primeiro passo é ajustar as duas variáveis com notas, pois são texto
strsplit(completo$IMDb, "/")[[1]][1]
ajuste_imdb <- as.numeric(strsplit(completo$IMDb, "/")[[1]][1])
ajuste_rotten <- as.numeric(strsplit(completo$Rotten.Tomatoes, "/")[[1]][1])
completo <- completo %>%  mutate(IMDB = ajuste_imdb,
ROTTEN = ajuste_rotten)
View(completo)
ajuste_imdb <- as.numeric(strsplit(completo$IMDb, "/")[[1]][1])
# O primeiro passo é ajustar as duas variáveis com notas, pois são texto
word <- 'apple-orange-strawberry'
strsplit(word, "-")[[1]][1]
ajuste_imdb <- as.numeric(strsplit(completo$IMDb, "/")[[1]][1])
strsplit(completo$IMDb, "/")
strsplit(completo$IMDb, "/")[1]
strsplit(word, "-")[,1]
strsplit(completo$IMDb, "/")
strsplit(completo$IMDb, "/")[,1]
strsplit(completo$IMDb, "/")[1,]
strsplit(completo$IMDb, "/")[1,1]
strsplit(completo$IMDb, "/")[,2]
strsplit(completo$IMDb, "/")[,3]
strsplit(completo$IMDb, "/") %>% sapply(extract,1)
strsplit(completo$IMDb, "/") %>% sapply(extract2,1)
# O primeiro passo é ajustar as duas variáveis com notas, pois são texto
word <- strsplit(completo$IMDb, "/")
View(word)
View(word)
word
word[1:2]
word[,1:2]
word[1:2][1]
word[1:2][2]
word[1:2][3]
word[3]
word[1000]
str_split(completo$IMDb, "/")
str_split(completo$IMDb, "/", TRUE)
str_split(completo$IMDb, "/", FALSE)
str_split_fixed(completo$IMDb, "/", 1)
str_split_fixed(completo$IMDb, "/", 2)
str_split_fixed(completo$IMDb, "/", 3)
str_split_fixed(completo$IMDb, "/", 2)
str_split_fixed(completo$IMDb, "/", 2)[1]
str_split_fixed(completo$IMDb, "/", 2)[,1]
str_split_fixed(completo$IMDb, "/", 2)
str_split(completo$IMDb, "/", 2)
str_split(completo$IMDb, "/", 1)
str_split_fixed(completo$IMDb, "/", 2)[,1]
str_split_(completo$IMDb, "/", 2)[,1]
str_split(completo$IMDb, "/", 2, TRUE)[,1]
ajuste_imdb <- as.numeric(str_split(completo$IMDb, "/", 2, TRUE)[,1])
ajuste_rotten <- as.numeric(str_split(completo$Rotten.Tomatoes, "/", 2, TRUE)[,1])
completo <- completo %>%  mutate(IMDB = ajuste_imdb,
ROTTEN = ajuste_rotten)
View(completo)
