##################################################################################
#                 INSTALAÇÃO E CARREGAMENTO DE PACOTES NECESSÁRIOS               #
##################################################################################
#Pacotes utilizados
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","reshape2","PerformanceAnalytics","metan","correlation",
"see","ggraph","nortest","rgl","car","olsrr","jtools","ggstance",
"magick","cowplot","beepr","Rcpp")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
##################################################################################
#                 INSTALAÇÃO E CARREGAMENTO DE PACOTES NECESSÁRIOS               #
##################################################################################
#Pacotes utilizados
pacotes <- c("plotly","tidyverse","ggrepel","fastDummies","knitr","kableExtra",
"splines","reshape2","PerformanceAnalytics","metan","correlation",
"see","ggraph","nortest","rgl","car","olsrr","jtools","ggstance",
"magick","cowplot","beepr","Rcpp")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
load(file = "bebes.RData")
#Estatísticas univariadas
summary(bebes)
View(bebes)
#Gráfico de dispersão
ggplotly(
bebes %>%
ggplot() +
geom_point(aes(x = idade, y = comprimento),
color = "grey20", alpha = 0.6, size = 2) +
labs(x = "Idade em semanas",
y = "Comprimento em cm") +
theme_bw()
)
#Gráfico de dispersão com ajustes (fits) linear e não linear
ggplotly(
bebes %>%
ggplot() +
geom_point(aes(x = idade, y = comprimento),
color = "grey20", alpha = 0.6, size = 2) +
geom_smooth(aes(x = idade, y = comprimento),
method = "lm", color = "#FDE725FF", se = F) +
geom_smooth(aes(x = idade, y = comprimento),
color = "#440154FF", se = F) +
labs(x = "Idade em semanas",
y = "Comprimento em cm") +
theme_bw()
)
#Estimação do modelo OLS linear
modelo_linear <- lm(formula = comprimento ~ idade,
data = bebes)
summary(modelo_linear)
View(modelo_linear)
#Shapiro-Francia: n > 30
sf.test(modelo_linear$residuals) #função sf.test do pacote nortest
#Histograma dos resíduos do modelo OLS linear
bebes %>%
mutate(residuos = modelo_linear$residuals) %>%
ggplot(aes(x = residuos)) +
geom_histogram(aes(y = ..density..),
color = "grey50",
fill = "grey90",
bins = 30,
alpha = 0.6) +
stat_function(fun = dnorm,
args = list(mean = mean(modelo_linear$residuals),
sd = sd(modelo_linear$residuals)),
aes(color = "Curva Normal Teórica"),
size = 2) +
scale_color_manual("Legenda:",
values = "#FDE725FF") +
labs(x = "Resíduos",
y = "Frequência") +
theme(panel.background = element_rect("white"),
panel.grid = element_line("grey95"),
panel.border = element_rect(NA),
legend.position = "bottom")
