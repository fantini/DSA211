##################################################################################
#                  INSTALAÇÃO E CARREGAMENTO DE PACOTES NECESSÁRIOS             #
##################################################################################
#Pacotes utilizados
pacotes <- c("plotly","tidyverse","knitr","kableExtra","fastDummies","rgl","car",
"reshape2","jtools","lmtest","caret","pROC","ROCR","nnet", "magick",
"cowplot")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
##################################################################################
#                  INSTALAÇÃO E CARREGAMENTO DE PACOTES NECESSÁRIOS             #
##################################################################################
#Pacotes utilizados
pacotes <- c("plotly","tidyverse","knitr","kableExtra","fastDummies","rgl","car",
"reshape2","jtools","lmtest","caret","pROC","ROCR","nnet","magick",
"cowplot")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
##############################################################################
#                   REGRESSÃO LOGÍSTICA BINÁRIA - PARTE CONCEITUAL           #
##############################################################################
#Estabelecendo uma função para a probabilidade de ocorrência de um evento
prob <- function(z){
prob = 1 / (1 + exp(-z))
}
#Plotando a curva sigmóide teórica de ocorrência de um evento para um range
#do logito z entre -5 e +5
data.frame(z = -5:5) %>%
ggplot() +
stat_function(aes(x = z, color = "Prob. Evento"),
fun = prob,
size = 2) +
geom_hline(yintercept = 0.5, linetype = "dotted") +
scale_color_manual("Legenda:",
values = "#440154FF") +
labs(x = "Logito z",
y = "Probabilidade") +
theme_bw()
##############################################################################
#                       REGRESSÃO LOGÍSTICA BINÁRIA                          #
#                EXEMPLO 01 - CARREGAMENTO DA BASE DE DADOS                  #
##############################################################################
load(file = "Atrasado.RData")
##############################################################################
#            EXEMPLO 01 - OBSERVAÇÃO DA BASE DE DADOS Atrasado               #
##############################################################################
#Visualizando a base de dados
Atrasado %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 25)
#Parâmetros do modelo_atrasos
summary(modelo_atrasos)
#Estatísticas descritivas univariadas da base de dados
summary(Atrasado)
#Tabela de frequências absolutas da variável 'atrasado'
table(Atrasado$atrasado)
##############################################################################
#           EXEMPLO 01 - ESTIMAÇÃO DE UM MODELO LOGÍSTICO BINÁRIO            #
##############################################################################
modelo_atrasos <- glm(formula = atrasado ~ dist + sem,
data = Atrasado,
family = "binomial")
#Parâmetros do modelo_atrasos
summary(modelo_atrasos)
#Extração do valor de Log-Likelihood (LL)
logLik(modelo_atrasos)
#Outras maneiras de apresentar os outputs do modelo
#função summ do pacote jtools
summ(modelo_atrasos, confint = T, digits = 3, ci.width = .95)
install.packages('Rcpp')
install.packages("Rcpp")
#Extração do valor de Log-Likelihood (LL)
logLik(modelo_atrasos)
##############################################################################
#                       REGRESSÃO LOGÍSTICA BINÁRIA                          #
#                EXEMPLO 01 - CARREGAMENTO DA BASE DE DADOS                  #
##############################################################################
load(file = "Atrasado.RData")
##############################################################################
#            EXEMPLO 01 - OBSERVAÇÃO DA BASE DE DADOS Atrasado               #
##############################################################################
#Visualizando a base de dados
Atrasado %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 25)
#Estatísticas descritivas univariadas da base de dados
summary(Atrasado)
#Tabela de frequências absolutas da variável 'atrasado'
table(Atrasado$atrasado)
##############################################################################
#           EXEMPLO 01 - ESTIMAÇÃO DE UM MODELO LOGÍSTICO BINÁRIO            #
##############################################################################
modelo_atrasos <- glm(formula = atrasado ~ dist + sem,
data = Atrasado,
family = "binomial")
#Parâmetros do modelo_atrasos
summary(modelo_atrasos)
#Extração do valor de Log-Likelihood (LL)
logLik(modelo_atrasos)
#Outras maneiras de apresentar os outputs do modelo
#função summ do pacote jtools
summ(modelo_atrasos, confint = T, digits = 3, ci.width = .95)
##################################################################################
#                  INSTALAÇÃO E CARREGAMENTO DE PACOTES NECESSÁRIOS             #
##################################################################################
#Pacotes utilizados
pacotes <- c("plotly","tidyverse","knitr","kableExtra","fastDummies","rgl","car",
"reshape2","jtools","lmtest","caret","pROC","ROCR","nnet","magick",
"cowplot")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
##############################################################################
#                   REGRESSÃO LOGÍSTICA BINÁRIA - PARTE CONCEITUAL           #
##############################################################################
#Estabelecendo uma função para a probabilidade de ocorrência de um evento
prob <- function(z){
prob = 1 / (1 + exp(-z))
}
#Plotando a curva sigmóide teórica de ocorrência de um evento para um range
#do logito z entre -5 e +5
data.frame(z = -5:5) %>%
ggplot() +
stat_function(aes(x = z, color = "Prob. Evento"),
fun = prob,
size = 2) +
geom_hline(yintercept = 0.5, linetype = "dotted") +
scale_color_manual("Legenda:",
values = "#440154FF") +
labs(x = "Logito z",
y = "Probabilidade") +
theme_bw()
##############################################################################
#                       REGRESSÃO LOGÍSTICA BINÁRIA                          #
#                EXEMPLO 01 - CARREGAMENTO DA BASE DE DADOS                  #
##############################################################################
load(file = "Atrasado.RData")
##############################################################################
#            EXEMPLO 01 - OBSERVAÇÃO DA BASE DE DADOS Atrasado               #
##############################################################################
#Visualizando a base de dados
Atrasado %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 25)
#Estatísticas descritivas univariadas da base de dados
summary(Atrasado)
#Tabela de frequências absolutas da variável 'atrasado'
table(Atrasado$atrasado)
##############################################################################
#           EXEMPLO 01 - ESTIMAÇÃO DE UM MODELO LOGÍSTICO BINÁRIO            #
##############################################################################
modelo_atrasos <- glm(formula = atrasado ~ dist + sem,
data = Atrasado,
family = "binomial")
#Parâmetros do modelo_atrasos
summary(modelo_atrasos)
#Extração do valor de Log-Likelihood (LL)
logLik(modelo_atrasos)
#Outras maneiras de apresentar os outputs do modelo
#função summ do pacote jtools
summ(modelo_atrasos, confint = T, digits = 3, ci.width = .95)
export_summs(modelo_atrasos, scale = F, digits = 6)
#Fazendo predições para o modelo_atrasos. Exemplo: qual a probabilidade média
#de se chegar atrasado quando o trajeto tem 7 km e passa-se por 10 semáforos no percurso?
predict(object = modelo_atrasos,
data.frame(dist = 7, sem = 10),
type = "response")
