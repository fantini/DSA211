source('~/GitHub/DSA211/UML Fatorial PCA/AULA/SCRIPT - Instalação de Pacotes.R', encoding = 'UTF-8')
pacotes <- c("tidyverse","knitr","kableExtra","car","rgl","gridExtra",
"PerformanceAnalytics","reshape2","rayshader","psych","pracma",
"polynom","rqPen","ggrepel")
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
# Carregando a base de dados
load("notasfatorial.RData")
View(notasfatorial)
# Apresentando a base de dados:
notasfatorial %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = T,
font_size = 12)
scatter3d(notas_financas ~ notas_custos + notas_marketing,
data = notasfatorial,
surface = FALSE,
point.col = "dodgerblue4",
axis.col = rep(x = "black",
times = 3),
bg.col = "white")
# A) Notas da Disciplina de Custos x Notas da Disciplina de Finanças
notasfatorial %>%
ggplot() +
geom_point(aes(x = notas_financas, y = notas_custos),
color = "dodgerblue4",
size = 2) +
labs(x = "Notas da Disciplina de Finanças",
y = "Notas da Disciplina de Custos") +
theme_bw()
# Notaram a tendência linear? Se não, olhem a seguir:
notasfatorial %>%
ggplot() +
geom_point(aes(x = notas_financas, y = notas_custos),
color = "dodgerblue4",
size = 2) +
geom_smooth(aes(x = notas_financas, y = notas_custos),
color = "darkgoldenrod3",
method = "lm",
formula = y ~ x,
se = FALSE,
size = 1.2) +
labs(x = "Notas da Disciplina de Finanças",
y = "Notas da Disciplina de Custos") +
theme_bw()
# B) Notas da Disciplina de Marketing x Notas da Disciplina de Custos
notasfatorial %>%
ggplot() +
geom_point(aes(x = notas_custos, y = notas_marketing),
color = "dodgerblue4",
size = 2) +
labs(x = "Notas da Disciplina de Custos",
y = "Notas da Disciplina de Marketing") +
theme_bw()
# Há alguma tendência linear facilmente identificável? Vejamos:
notasfatorial %>%
ggplot() +
geom_point(aes(x = notas_custos, y = notas_marketing),
color = "dodgerblue4",
size = 2) +
geom_smooth(aes(x = notas_custos, y = notas_marketing),
color = "darkgoldenrod3",
method = "lm",
formula = y ~ x,
se = FALSE,
size = 1.2) +
labs(x = "Notas da Disciplina de Custos",
y = "Notas da Disciplina de Marketing") +
theme_bw()
# C) Notas da Disciplina de Finanças x Notas da Disciplina de Marketing
notasfatorial %>%
ggplot() +
geom_point(aes(x = notas_marketing, y = notas_financas),
color = "dodgerblue4",
size = 2) +
labs(x = "Notas da Disciplina de Marketing",
y = "Notas da Disciplina de Finanças") +
theme_bw()
# E dessa vez, você consegue visualizar alguma tendência linear?
notasfatorial %>%
ggplot() +
geom_point(aes(x = notas_marketing, y = notas_financas),
color = "dodgerblue4",
size = 2) +
geom_smooth(aes(x = notas_marketing, y = notas_financas),
color = "darkgoldenrod3",
method = "lm",
formula = y ~ x,
se = FALSE,
size = 1.2) +
labs(x = "Notas da Disciplina de Marketing",
y = "Notas da Disciplina de Finanças") +
theme_bw()
# Salvando o gráfico das Notas da Disciplina de Custos x Notas da Disciplina
# de Finanças
notasfatorial %>%
ggplot() +
geom_point(aes(x = notas_financas, y = notas_custos),
color = "dodgerblue4",
size = 2) +
geom_smooth(aes(x = notas_financas, y = notas_custos),
color = "darkgoldenrod3",
method = "lm",
formula = y ~ x,
se = FALSE,
size = 1.2) +
labs(x = "Notas da Disciplina de Finanças",
y = "Notas da Disciplina de Custos") +
theme_bw() -> A
# Salvando o gráfico das Notas da Disciplina de Marketing x Notas da
# Disciplina de Custos
notasfatorial %>%
ggplot() +
geom_point(aes(x = notas_custos, y = notas_marketing),
color = "dodgerblue4",
size = 2,
shape = 17) +
geom_smooth(aes(x = notas_custos, y = notas_marketing),
color = "darkgoldenrod3",
method = "lm",
formula = y ~ x,
se = FALSE,
size = 1.2) +
labs(x = "Notas da Disciplina de Custos",
y = "Notas da Disciplina de Marketing") +
theme_bw() -> B
# Salvando o gráfico das Notas da Disciplina de Finanças x Notas da
# Disciplina de Marketing
notasfatorial %>%
ggplot() +
geom_point(aes(x = notas_marketing, y = notas_financas),
color = "dodgerblue4",
size = 2,
shape = 15) +
geom_smooth(aes(x = notas_marketing, y = notas_financas),
color = "darkgoldenrod3",
method = "lm",
formula = y ~ x,
se = FALSE,
size = 1.2) +
labs(x = "Notas da Disciplina de Marketing",
y = "Notas da Disciplina de Finanças") +
theme_bw() -> C
# Juntando tudo:
grid.arrange(A, B, C) # acione o zoom para uma melhor visualização
# Salvando a Matriz de Correlações -----------------------------------
rho <- cor(notasfatorial[,2:5])
# Observando as correlações entre variáveis
chart.Correlation(notasfatorial[,2:5])
# Construindo um mapa de calor a partir das correlações
rho %>%
melt() %>%
ggplot() +
geom_tile(aes(x = Var1, y = Var2, fill = value)) +
geom_text(aes(x = Var1, y = Var2, label = round(x = value, digits = 3)),
size = 4) +
labs(x = NULL,
y = NULL,
fill = "Correlações") +
scale_fill_gradient2(low = "dodgerblue4",
mid = "white",
high = "brown4",
midpoint = 0) +
theme(panel.background = element_rect("white"),
panel.grid = element_line("grey95"),
panel.border = element_rect(NA),
legend.position = "bottom",
axis.text.x = element_text(angle = 0))
# Primeiro passo: salvando o mapa de calor 2D
plot3d_rho <- rho %>%
melt() %>%
ggplot() +
geom_tile(aes(x = Var1, y = Var2, fill = value, color = value),
color = "black") +
labs(x = NULL,
y = NULL) +
viridis::scale_fill_viridis("Correlações") +
theme(axis.text = element_text(size = 12),
title = element_text(size = 12,face = "bold"),
panel.border= element_rect(size = 2, color = "black", fill = NA))
plot3d_rho
# Segundo passo: visualizando o plot 3D
plot_gg(ggobj = plot3d_rho,
multicore = TRUE,
width = 6,
height = 6,
scale = 300,
background = "white",
shadowcolor = "dodgerblue4")
# A estatística KMO -------------------------------------------------------
KMO(r = rho)
# O teste de efericidade de Bartlett --------------------------------------
cortest.bartlett(R = rho)
# De onde vêm os graus de liberdade?
(ncol(rho) * (ncol(rho) - 1)) / 2
# De onde vem o p-valor do teste de efericidade de Bartlett?
pchisq(q = 192.3685, df = 6, lower.tail = FALSE)
